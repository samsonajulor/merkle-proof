/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MerkleProofDist,
  MerkleProofDistInterface,
} from "../../../contracts/merkleProof.sol/MerkleProofDist";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensDistributed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013163803806200131683398181016040528101906200003791906200022c565b620000576200004b620000a760201b60201c565b620000af60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505062000273565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a58262000178565b9050919050565b6000620001b98262000198565b9050919050565b620001cb81620001ac565b8114620001d757600080fd5b50565b600081519050620001eb81620001c0565b92915050565b6000819050919050565b6200020681620001f1565b81146200021257600080fd5b50565b6000815190506200022681620001fb565b92915050565b6000806040838503121562000246576200024562000173565b5b60006200025685828601620001da565b9250506020620002698582860162000215565b9150509250929050565b61109380620002836000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637cb64759116100665780637cb64759146101215780638da5cb5b1461013d578063b9209e331461015b578063f2fde38b1461018b578063fc0c546a146101a75761009e565b80632eb4a7ab146100a35780633ccfd60b146100c157806350bca4ca146100cb578063715018a6146100e7578063726d20fe146100f1575b600080fd5b6100ab6101c5565b6040516100b891906108e7565b60405180910390f35b6100c96101cb565b005b6100e560048036038101906100e09190610a05565b610311565b005b6100ef610536565b005b61010b60048036038101906101069190610a79565b61054a565b6040516101189190610b08565b60405180910390f35b61013b60048036038101906101369190610b4f565b6105d1565b005b6101456105e3565b6040516101529190610b8b565b60405180910390f35b61017560048036038101906101709190610ba6565b61060c565b6040516101829190610b08565b60405180910390f35b6101a560048036038101906101a09190610ba6565b61062c565b005b6101af6106af565b6040516101bc9190610c32565b60405180910390f35b60025481565b6101d36106d5565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161026d9190610b8b565b602060405180830381865afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae9190610c62565b6040518363ffffffff1660e01b81526004016102cb929190610c9e565b6020604051808303816000875af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e9190610cf3565b50565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610d7d565b60405180910390fd5b6103aa8383838761054a565b6103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610de9565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82866040518363ffffffff1660e01b815260040161049e929190610c9e565b6020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610cf3565b508073ffffffffffffffffffffffffffffffffffffffff167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c856040516105289190610e09565b60405180910390a250505050565b61053e6106d5565b6105486000610753565b565b6000808383604051602001610560929190610e8d565b6040516020818303038152906040528051906020012090506105c6868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060025483610817565b915050949350505050565b6105d96106d5565b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b6106346106d5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90610f2b565b60405180910390fd5b6106ac81610753565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106dd61082e565b73ffffffffffffffffffffffffffffffffffffffff166106fb6105e3565b73ffffffffffffffffffffffffffffffffffffffff1614610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074890610f97565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000826108248584610836565b1490509392505050565b600033905090565b60008082905060005b84518110156108815761086c8286838151811061085f5761085e610fb7565b5b602002602001015161088c565b9150808061087990611015565b91505061083f565b508091505092915050565b60008183106108a45761089f82846108b7565b6108af565b6108ae83836108b7565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b6108e1816108ce565b82525050565b60006020820190506108fc60008301846108d8565b92915050565b600080fd5b600080fd5b6000819050919050565b61091f8161090c565b811461092a57600080fd5b50565b60008135905061093c81610916565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261096757610966610942565b5b8235905067ffffffffffffffff81111561098457610983610947565b5b6020830191508360208202830111156109a05761099f61094c565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d2826109a7565b9050919050565b6109e2816109c7565b81146109ed57600080fd5b50565b6000813590506109ff816109d9565b92915050565b60008060008060608587031215610a1f57610a1e610902565b5b6000610a2d8782880161092d565b945050602085013567ffffffffffffffff811115610a4e57610a4d610907565b5b610a5a87828801610951565b93509350506040610a6d878288016109f0565b91505092959194509250565b60008060008060608587031215610a9357610a92610902565b5b600085013567ffffffffffffffff811115610ab157610ab0610907565b5b610abd87828801610951565b94509450506020610ad0878288016109f0565b9250506040610ae18782880161092d565b91505092959194509250565b60008115159050919050565b610b0281610aed565b82525050565b6000602082019050610b1d6000830184610af9565b92915050565b610b2c816108ce565b8114610b3757600080fd5b50565b600081359050610b4981610b23565b92915050565b600060208284031215610b6557610b64610902565b5b6000610b7384828501610b3a565b91505092915050565b610b85816109c7565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b600060208284031215610bbc57610bbb610902565b5b6000610bca848285016109f0565b91505092915050565b6000819050919050565b6000610bf8610bf3610bee846109a7565b610bd3565b6109a7565b9050919050565b6000610c0a82610bdd565b9050919050565b6000610c1c82610bff565b9050919050565b610c2c81610c11565b82525050565b6000602082019050610c476000830184610c23565b92915050565b600081519050610c5c81610916565b92915050565b600060208284031215610c7857610c77610902565b5b6000610c8684828501610c4d565b91505092915050565b610c988161090c565b82525050565b6000604082019050610cb36000830185610b7c565b610cc06020830184610c8f565b9392505050565b610cd081610aed565b8114610cdb57600080fd5b50565b600081519050610ced81610cc7565b92915050565b600060208284031215610d0957610d08610902565b5b6000610d1784828501610cde565b91505092915050565b600082825260208201905092915050565b7f546f6b656e7320616c726561647920636c61696d656400000000000000000000600082015250565b6000610d67601683610d20565b9150610d7282610d31565b602082019050919050565b60006020820190508181036000830152610d9681610d5a565b9050919050565b7f496e636f72726563742070726f6f660000000000000000000000000000000000600082015250565b6000610dd3600f83610d20565b9150610dde82610d9d565b602082019050919050565b60006020820190508181036000830152610e0281610dc6565b9050919050565b6000602082019050610e1e6000830184610c8f565b92915050565b60008160601b9050919050565b6000610e3c82610e24565b9050919050565b6000610e4e82610e31565b9050919050565b610e66610e61826109c7565b610e43565b82525050565b6000819050919050565b610e87610e828261090c565b610e6c565b82525050565b6000610e998285610e55565b601482019150610ea98284610e76565b6020820191508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f15602683610d20565b9150610f2082610eb9565b604082019050919050565b60006020820190508181036000830152610f4481610f08565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f81602083610d20565b9150610f8c82610f4b565b602082019050919050565b60006020820190508181036000830152610fb081610f74565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110208261090c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361105257611051610fe6565b5b60018201905091905056fea26469706673582212200f0f974f99049e6547ab08c7d8a7a1196c0bb1b50e0b7f1d40389f54c2c6156964736f6c634300080d0033";

type MerkleProofDistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleProofDistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleProofDist__factory extends ContractFactory {
  constructor(...args: MerkleProofDistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _merkleRoot: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _merkleRoot, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _merkleRoot: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _merkleRoot, overrides || {}) as Promise<
      MerkleProofDist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleProofDist__factory {
    return super.connect(runner) as MerkleProofDist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleProofDistInterface {
    return new Interface(_abi) as MerkleProofDistInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleProofDist {
    return new Contract(address, _abi, runner) as unknown as MerkleProofDist;
  }
}
